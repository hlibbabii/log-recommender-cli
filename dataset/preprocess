#!/usr/bin/env bash

#------------------------------------------------------------------------------------
set -e  # Fail on first error
# Some useful global variables and constants
CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
SCRIPT_NAME="$0"

source $CURRENT_DIR/../.conf
source $CURRENT_DIR/../log4bash.sh
source $CURRENT_DIR/../util.sh
source /home/lv71161/hlibbabii/anaconda3/etc/profile.d/conda.sh
#-----------------------------------------------------------------------------------
# Checking configuration

checkVarInConf PARSED_DATASETS_DIR

checkVarInConf PATH_TO_PROJECT

checkVarInConf PREPROCESSING_PARAMS
checkVarInConf DEFAULT_PREPROCESSING_PARAMS_VALUES
checkVarInConf MAX_PREPROCESSING_PARAMS_VALUES
#-----------------------------------------------------------------
#Checking input data

DATASET="$1"
if [[ -z ${DATASET} ]]; then
    # TODO: usage
    echo "Specify the dataset!"
    exit 1
fi

set +e
${CURRENT_DIR}/ls ${DATASET} > /dev/null
LS_EXIT_STATUS=$?
set -e

if [[ ${LS_EXIT_STATUS} -eq 44 ]]; then
    echo "Unknown dataset: ${DATASET}"
    exit 2
fi
#----------------------------------------------------------------
# Ask for preprocessing options

N_PP_PARAMS=${#PREPROCESSING_PARAMS[@]}
if [ $N_PP_PARAMS -ne ${#DEFAULT_PREPROCESSING_PARAMS_VALUES[@]} ]; then
    echo "The number of preprocessing params and preprocessing params values differ"
    exit 89
fi

if [ $N_PP_PARAMS -ne ${#MAX_PREPROCESSING_PARAMS_VALUES[@]} ]; then
    echo "The number of preprocessing params and preprocessing params max values differ"
    exit 88
fi

pp=""
for i in $(seq 0 $(( N_PP_PARAMS-1 )) ); do
    read -r -p "enter ${PREPROCESSING_PARAMS[$i]} (${DEFAULT_PREPROCESSING_PARAMS_VALUES[$i]}):" val
    if [ -z $val ]; then
        val=${DEFAULT_PREPROCESSING_PARAMS_VALUES[$i]}
    elif [[ ! "$val" =~ ^[0-9]$ || "$val" -gt "${MAX_PREPROCESSING_PARAMS_VALUES[$i]}" ]]; then
        echo "Wrong value! Should be a number not greater then ${MAX_PREPROCESSING_PARAMS_VALUES[$i]}"
        exit 24
    fi
    pp="${pp}${PREPROCESSING_PARAMS[$i]}=$val,"
done 
pp=${pp: : -1}
#---------------------------------------------------------------

cd ${PATH_TO_PROJECT}
conda activate fastai


PYTHON_CMD="python logrec/dataprep/to_repr.py"
PYTHON_CMD="$PYTHON_CMD --base-from ${PARSED_DATASETS_DIR} --base-to ${PARSED_DATASETS_DIR}"
PYTHON_CMD="$PYTHON_CMD --preprocessing-params $pp"
PYTHON_CMD="$PYTHON_CMD ${DATASET}/parsed ${DATASET}"
CMD="${PYTHON_CMD} --  >${parsed_dataset}/parsed.log 2>&1"
echo "Running the following command:"
printGreen "${CMD}"
${CMD}
