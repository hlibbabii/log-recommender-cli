













#!/usr/bin/env bash

#------------------------------------------------------------------------------------
set -e  # Fail on first error

# Some useful global variables and constants
CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
SCRIPT_NAME="$0"

REAL_CURRENT_DIR=$(readlink -f "$CURRENT_DIR")
PROJECT_ROOT="$REAL_CURRENT_DIR/.."
source $PROJECT_ROOT/.conf
source $PROJECT_ROOT/log4bash.sh
source $PROJECT_ROOT/util.sh
source $PROJECT_ROOT/common.sh

#------------------------------------------------------------------------------------

getReducedVocabSize() {
    local _dataset_name="$1"
    local _repr_name="$2"
    local _result_var_name1="$3"
    local _result_var_name2="$4"
    local _result_var_name3="$5"
    local _min_quantity="$6"

    local _parsed_dataset_dir="$PARSED_DATASETS_DIR/$_dataset_name"
    local _vocab_file="$_parsed_dataset_dir/metadata/$_repr_name/vocab"
    local _vocabsize_file="$_parsed_dataset_dir/metadata/$_repr_name/vocabsize"
    local _vocabfreqs_file="$_parsed_dataset_dir/metadata/$_repr_name/vocabfreqs"
    local _vocabfreqs_cumul_file="$_parsed_dataset_dir/metadata/$_repr_name/vocabfreqs_cumul"
    if ! [ -f "$_vocab_file" ]; then
        printf -v "$_result_var_name1" '%s' "UNK"
        printf -v "$_result_var_name2" '%s' "UNK"
        return 1
    fi;
    _vocab_size=$(head -1 "$_vocabsize_file")
    _n_tokens=$(cat $_vocab_file |awk -e '{sum += $2} END {print sum}')

    line=""
    while [ -z "$line" ] && [ "$_min_quantity" -gt 0 ]; do
        line=$(grep -P "^$_min_quantity\t.*\t.*\$" "$_vocabfreqs_cumul_file" || true)
        if [ -z "$line" ]; then
            echo "Failed to grep $_min_quantity from $_vocabfreqs_cumul_file" 
            _min_quantity=$((_min_quantity-1))
        else
            echo "Grepped: $line"
        fi
    done
    if [ "$_min_quantity" -eq 0 ]; then
        _reduced_vocabsize=$vocab_size
        _reduced_n_tokens=0
    else
        _vocab_reduced=$(echo "$line" | cut -f2)
        _reduced_vocabsize=$((_vocab_size-_vocab_reduced))
        _reduced_n_tokens=$(echo "$line" | cut -f3)
    fi

    local _percent=$(echo "$_reduced_n_tokens / $_n_tokens * 100" | bc -l)

    printf -v "$_result_var_name1" '%s' "$_reduced_vocabsize"
    printf -v "$_result_var_name2" '%s' "$_reduced_n_tokens"
    printf -v "$_result_var_name3" '%.3f%%' "$_percent"
}

DEL="\t"

displayOov() {
    local _dataset="$1"

    if [[ ! -d "$RAW_DATASETS_DIR/$_dataset" ]]; then
        echo "$RAW_DATASETS_DIR/$_dataset"
        echo -e "Dataset $_dataset does not exist"
        $CURRENT_DIR/$SCRIPT_NAME
        exit 44
    fi

    displayGeneralDatasetInfoVerbose $_dataset

    local _all_preps_loc="$PARSED_DATASETS_DIR/$_dataset/repr"
    local _all_metadata_loc="$PARSED_DATASETS_DIR/$_dataset/metadata"
    echo "Preprocessings:   (Location: $_all_preps_loc)"
    echo
    local _str="prepconfig"
    for prep_param in ${PREPROCESSING_PARAMS[@]}; do
        _str="$_str$DEL$prep_param"
    done
    _str="$_str$DELvocabsize$DELn_tokens"
    for freq in ${MIN_FREQ_OPTIONS[@]}; do
       _str="$_str$DEL>=$freq(vocab)$DEL>=$freq(-n_tokens)$DEL>=$freq(-n_tokens%)"
    done
    _str="$_str$DEL\n"

    for _metadata_loc in $_all_metadata_loc/*; do
        local _prep_name="$(basename $_metadata_loc)"
        local _vocabfreqs_cumul_file="$_metadata_loc/vocabfreqs_cumul"
        
        log_debug "Processing $_prep_name"
        if [ "$_prep_name" == "*" ]; then
            continue
        fi

        _str="$_str$DEL$_prep_name"

        counter=0
	while IFS='' read -r param_val; do
            VAR_NAME="${PREPROCESSING_PARAMS[$counter]}_STRING_VALUES[${param_val}]"
            _str="${_str}$DEL${!VAR_NAME}"
            counter=$((counter+1))
        done <<<"$(echo $_prep_name | grep -o .)" 
        
        $PROJECT_ROOT/vocab/freqs "$_dataset" "$_prep_name"        
        $PROJECT_ROOT/vocab/freqs_cumul "$_dataset" "$_prep_name"        

        last_line="$(tail -1 $_vocabfreqs_cumul_file)"
        _vocabsize="$(echo $last_line | cut -f2)"
        _n_tokens="$(echo $last_line | cut -f3)"

        _str="$_str$DEL$_vocabsize$DEL$_n_tokens"

        for freq in ${MIN_FREQ_OPTIONS[@]}; do
            getReducedVocabSize $_dataset $_prep_name result1 result2 result3 "$freq"; 
            _reduced_vocabsize="${result1}"; _reduced_n_tokens="${result2}"; _reduced_n_tokens="${result3}"

            _str="$_str$DEL$_reduced_vocabsize$DEL$_reduced_n_tokens$DEL$_reduced_n_tokens_percent\n"
        done
    done
    echo -e $_str | column -t
    echo
}

if [ -z "$1" ]; then
    echo "Dataset not specified"
    exit 381
fi

DATASET="$1"

checkVarInConf RAW_DATASETS_DIR
checkVarInConf PARSED_DATASETS_DIR

checkDirExists RAW_DATASETS_DIR
checkDirExists PARSED_DATASETS_DIR

displayOov $DATASET
